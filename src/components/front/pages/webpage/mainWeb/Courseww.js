import React, { useState } from 'react';
import './Courseww.css';

const Course1 = () => {
  const [activeModule, setActiveModule] = useState(1);

  const moduleContent = {
    1: {
      description: "На першому модулі учні (рекомендовано від 12 до 18 років) ознайомляться з однією із галузей web-розробки - Front-end. Відбувається ознайомлення із такими речами, як: HTML, CSS, стилізація текстів, векторна графіка, анімація в CSS, Bootstrap, JavaScript, JQuery, AJAX, JQuery UI.Від початку і до кінця учні разом із викладачем будуть вивчати основи сучасної розробки сайтів. В кінцевому підсумку діти будуть розуміти структуру сайтів, як правильно їх створювати та як зробити якісною свою роботу.",
      program: [
        "Основні HTML-теги",
        "Введення в CSS. Підключення зовнішніх файлів стилю.",
        "Стилізація текстів. Блочна модель та позиціонування блоків",
        "Використання графіки. Створення тіней",
        "Анімація в CSS",
        "Адаптивний веб-дизайн. Основи Bootstrap",
        "Ознайомлення з JavaScript. Змінні. Типи даних. Оператори. Робота з числами та текстом",
        "Продовження вивчення JavaScript. Умовні оператори. Цикли. Функції. Дата і час.",
        "Об'єкти. Наслідування",
        "Ознайомлення з jQuery. Взаємодія з вибіркою. Події. AJAX",
        "Стилізація та валідація форм. Створюємо слайдери зображень",
        "JQuery UI"
      ],
      learnText: [
        "Установлювати програмне забезпечення для роботи з мовою гіпертекстової розмітки тексту HTML, CSS & JavaScript.",
        "Як правильно стилізувати сайт.",
        "Працювати з векторною графікою.",
        "Створювати власні анімаційні ефекти.",
        "Створювати адаптивні сайти використовуючи Bootstrap.",
        "Працювати з JavaScript (змінні, типи даних, оператори, робота з числами та текстом).",
        "Розрізняти види наслідувань.",
        "Створювати насичений інтерфейс користувача у вебзастосунках за допомогою JQuery."
      ]
    },
    2: {
      description: "У другому модулі учні переходять на новий, вищий рівень програмування, а саме: Back-End (зворотна частина сайту). Вони починають вивчати логіку сайту, тобто те, що найменш помітне, але займає вагому долю процесу розробки. З’являються поняття: «клієнт-сервер», «база даних», «керуючі конструкції», «вебформи», «сесії», регулярні вирази. Учні вивчають принцип об’єктно-орієнтованого підходу та вчаться як якісно створювати бекенд-частину сайту.Діти знайомляться з мовою програмування РНР та на її основі створюють власний чат, який у свою чергу виставляють на хостинг, вивчають роботу з файлами та як писати власні функції. Працюють з керуючими конструкціями, а також з масивам та сесіями - усе це та багато чого іншого очікує на наших веброзробників у рамках другого модуля.",
      program: [
        "Налаштування середовища. Інструменти Back-end розробника",
        "Змінні. Типи даних. Умовні оператори. Керуючі конструкції",
        "Керуючі конструкції (продовження)",
        "Поняття функції у PHP",
        "Робота з файлами",
        "Web-форми. JSON",
        "Бази даних",
        "Бази даних. Продовження",
        "Сессії. Розробка невеличкого чату",
        "Основи об’єктно-орієнтованого програмування",
        "Об’єктно-орієнтоване програмування (продовження)",
        "Регулярні вирази в PHP"
      ],
      learnText: [
        " Розуміти мову програмування РНР.",
        "Працювати зі змінними, типами даних.",
        "Застосовувати основні алгоритмічні конструкції, такі як умовні оператори та цикли.",
        "Зрозуміти основи об’єктно-орієнтованого програмування.",
        "Як правильно створювати сайти «клієнт-сервер».",
        "Працювати із базами даних.",
        "Писати власні функції.",
        "Працювати із файлами.",
        "Створювати власний чат та виставлять на хостинг.",
        "Web-формам.",
        "Створювати сесії для сайтів.",
        "Працювати з регулярними виразами."
      ]
    },
    3: {
      description: "Третій модуль повністю присвячений вивченню фреймворка Laravel та створенню блогу на основі патерну MVC. Діти ознайомлюються з можливостями даного фреймворку, дізнаються як захистити свій сайт від хакерських атак та закріплюють знання, які отримали в двох попередніх модулях. Вивчають механізм CRUD та відношення між моделями-таблицями, роути, маршрутизацію сайту та інше. Є можливість створити свій редактор для опису постів та завантажувати зображення у проєкт. В кінці модуля учні завантажують свій проєкт на могутній вебсервер GitHub. Як кінцевий результат, діти отримують безпечний і функціональний блог, який вони можуть модифікувати під свої вподобання.",
      program: [
        "Налаштування середовища розробки. Ознайомлення з фреймворком Laravel",
        "Структура Laravel. Міграції. Artisan",
        "MVC",
        "Продовження MVC. Що таке блог?",
        "Front-end блогу. Database. Laravel Collective Form",
        "Validation. Session. Reading data",
        "Update. Delete. Pagination. Query Builder",
        "Помилки. Slug. Features",
        "Authentication",
        "Relationships. Categories. Tags relationships",
        "Tags. Contact Form. Comments",
        "WYSIWYG. Image. GitHub"
      ],
      learnText: [
        "Налаштувати середовище розробки та локальний сервер",
        "Основам фреймворка Laravel.",
        "Застосовувати патерн MVC (Model-View-Controller).",
        "Працювати із механізмом CRUD (Create Read Update Delete).",
        "Використовувати міграції та роутинг сайту.",
        "Працювати з командою «artisan».",
        "Використовувати Laravel Collective Form .",
        "Валідувати дані за допомогою JavaScript Validation.",
        "Створювати пагінацію сторінок.",
        "Створювати аутентифікацію сайту.",
        "Вивчати відносини між моделями-таблицями.",
        "Створювати власний редактор для опису постів.",
        "Завантажувати зображення у проєкт.",
        "Користуватись вебсервером GitHub."
      ]
    },
    4: {
      description: "Останній, четвертий модуль – розробка інтернет-магазину на основі платформи ASP.NET MVC 5. Учні знайомляться зі ще однією мовою програмування, а саме: C# (одна із популярних і найбільш затребуваних мов програмування). Створюють невеликі сайти за допомогою ASP.NET та переходять до створення інтернет-магазину на більш новішій платформі ASP.NET MVC 5. Діти вчаться правильно реалізовувати логіку програми, щоб працювала якісно та надійно, засвоїли знання щодо патерну MVC та технології Entity Framework. Реалізовують кошик для товарів нашого ІМ та створюють процес замовлення товару клієнтом. Навчаються підключати посилання соціальних мереж на сайті та багато чого іншого. Ознайомлюються із ще одним могутнім вебсервером Bitbucket. Як кінцевий результат, діти отримують безпечний і функціональний інтернет-магазину, який вони можуть модифікувати під свої вподобання.",
      program: [
       "Ознайомлення із C# та середовищем програмування Visual Studio",
       "Строга типізація в c#. основні типи даних",
       "ASP.NET",
       "Продовження ASP.NET. Початок ASP.NET MVC 5",
       "ASP.NET MVC 5",
       "Інтернет-магазин ASP.NET MVC 5",
       "CRUD in Entity Framework",
       "Search. CRUD for Product. Theme",
       "Uploading pictures. Relationships",
       "Category & Product. Cart",
       "Shopping cart for products. URL",
       "Image for Product. Pagination",
       "Validation. Widgets",
       "Filters. Cart Functionality",
       "Аутентифікація. Orders Processing"
      ],
      learnText: [
        "Працювати з мовою програмування C#.",
        "Розрізняти динамічні та статичні сторінки.",
        "Розуміти технологію ASP.NET.",
        "Працювати з технологією Entity Framework та підходом CodeFirst.",
        "Застосовувати патерн MVC в ASP.NET.",
        "Створювати бізнес-процеси для інтернет-магазину.",
        "Працювати з механізмом CRUD.",
        "Створювати AJAX-форми.",
        "Реалізовувати корзину для товарів в своєму ІМ.",
        "Завантажувати зображення в проєкт в даній технології.",
        "Створювати пагінацію сторінок та фільтри для товарів.",
        "Валідувати дані та віджети для товарів.",
        "Створювати аутентифікацію сайту.",
        "Користуватись вебсервером Bitbucket."
      ]
    }
  };

  return (
    <section id="course" className="sectionCourse">
      <div className="course-containerT">
        <div className="course-headerT">
          <h1>Курс веб-розробка для школярів</h1>
        </div>

        <div className="tabsT">
          <button 
            className={`tabT ${activeModule === 1 ? 'activeT' : ''}`}
            onClick={() => setActiveModule(1)}
          >
            Модуль 1
          </button>
          <button 
            className={`tabT ${activeModule === 2 ? 'activeT' : ''}`}
            onClick={() => setActiveModule(2)}
          >
            Модуль 2
          </button>
          <button 
            className={`tabT ${activeModule === 3 ? 'activeT' : ''}`}
            onClick={() => setActiveModule(3)}
          >
            Модуль 3
          </button>
          <button 
            className={`tabT ${activeModule === 4 ? 'activeT' : ''}`}
            onClick={() => setActiveModule(4)}
          >
            Модуль 4
          </button>
        </div>

        <p>{moduleContent[activeModule].description}</p>

        <div className="programsT">
          <div className="programT">
            <h3>Програма курсу:</h3>
            <ul>
              {moduleContent[activeModule].program.map((item, index) => (
                <li key={index}>{item}</li>
              ))}
            </ul>
          </div>

          <div className="learnT">
            <h3>Ми навчимо вашу дитину:</h3>
            <ul>
              {moduleContent[activeModule].learnText.map((item, index) => (
                <li key={index}>{item}</li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </section>
  );
}

export default Course1;
